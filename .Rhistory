roxygen2::roxygenize( '.', roclets=c('rd', 'collate', 'namespace'))
library(roxygen2)
library(devtools)
create()
y <- c(5*rnorm(30 , 100 , 5 ) + 60 , 2*rnorm(20 , 100 , 5)+20)
x <- 5*rnorm(30 , 100 , 5 ) + 20
model1 <- lm(y ~ x1 + x2)
ChowTest(model = model1 , n1 = 30)
ChowTest(model = model1 , n1 = 30 , n2 = 20)
y <- c(5*rnorm(30 , 100 , 5 ) + 60 , 2*rnorm(20 , 100 , 5)+20)
x <- 5*rnorm(30 , 100 , 5 ) + 20
model1 <- lm(y ~ x1 + x2)
y <- c(5*rnorm(30 , 100 , 5 ) + 60 , 2*rnorm(20 , 100 , 5)+20)
x <- 5*rnorm(30 , 100 , 5 ) + 20
model1 <- lm(y ~ x)
y <- c(5*rnorm(30 , 100 , 5 ) + 60 , 2*rnorm(20 , 100 , 5)+20)
x <- 5*rnorm(50 , 100 , 5 ) + 20
model1 <- lm(y ~ x)
rm(list = ls())
install.packages("usethis")
library(roxygen2)
library(devtools)
document()
getwd()
document()
getwd()
setwd(..)
setwd("..")
getwd()
install("copse")
?ChowTest
getwd()
install("copse")
copse::
search()
library(copse)
copse::print.ChowTest
install("copse")
library(devtools)
library(roxygen2)
install("copse")
getwd()
setwd("..")
install("copse")
methods("prin*")
methods("print")
base:::print.summary.table.ppr
library(ggplot2)
build_manual()
setwd("copse")
build_manual()
rlang::last_error()
tinytex::tlmgr_install()
build_manual()
tinytex::tlmgr_install("makeindex")
build_manual()
pack <- "copse"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", shQuote(path)))
getwd()
devtools::check(manual = T)
R.home()
person(role = )
person(role = "df")
remove.packages("copse")
setwd("..")
library(devtools)
library(roxygen2)
install("copse")
base:::print.summary.table
getwd()
setwd("..")
library(devtools)
create("copse")
create("copse")
remove.packages("copse")
library(roxygen2)
library(devtools)
getwd()
setwd("..")
getwd()
install("copse")
remove.packages("copse")
setwd("..")
library(devtools)
library(roxygen2)
install("copse")
remove.packages("copse")
library(devtools)
library(roxygen2)
getwd()
setwd("..")
install("copse")
install("copse")
library(devtools)
library(roxygen2)
setw("..")
install("copse")
getwd()
setwd("..")
getwd()
install("copse")
remove.packages("copse")
library(devtools)
library(roxygen2)
setwd("..")
install("copse")
library(devtools)
document()
build_manual()
remove.packages("copse")
update.packages()
usethis::use_test(name = "copse")
usethis::use_testthat(3)
library(testthat)
library(usethis)
usethis::use_testthat(3)
library(testthat)
library(usethis)
use_test("chowTest")
use_test("resetTest")
use_test("runsTest")
usethis::use_testthat(3)
library(testthat)
library(usethis)
use_test("chowTest")
use_test("resetTest")
use_test("runsTest")
y <- c(5*rnorm(30 , 100 , 5 ) + 60 , 2*rnorm(20 , 100 , 5)+20)
x <- 5*rnorm(50 , 100 , 5 ) + 20
model1 <- lm(y ~ x)
ChowTest(model = model1 , n1 = 30)
ChowTest(model = model1 , n1 = 30 , n2 = 20)
y <- c(5*rnorm(30 , 100 , 5 ) + 60 , 2*rnorm(20 , 100 , 5)+20)
x <- 5*rnorm(50 , 100 , 5 ) + 20
model1 <- lm(y ~ x)
test_that("multiplication works", {
expect_less_than(ChowTest(model1) , 0.05)
})
source('C:/Users/ugurc/copse/R/chowTest.R', echo=TRUE)
y <- c(5*rnorm(30 , 100 , 5 ) + 60 , 2*rnorm(20 , 100 , 5)+20)
x <- 5*rnorm(50 , 100 , 5 ) + 20
model1 <- lm(y ~ x)
test_that("multiplication works", {
expect_less_than(ChowTest(model1) , 0.05)
})
y <- c(5*rnorm(30 , 100 , 5 ) + 60 , 2*rnorm(20 , 100 , 5)+20)
x <- 5*rnorm(50 , 100 , 5 ) + 20
model1 <- lm(y ~ x)
test_that("multiplication works", {
expect_less_than(ChowTest(model1 , 30) , 0.05)
})
y <- c(5*rnorm(30 , 100 , 5 ) + 60 , 2*rnorm(20 , 100 , 5)+20)
x <- 5*rnorm(50 , 100 , 5 ) + 20
model1 <- lm(y ~ x)
test_that("multiplication works", {
expect_less_than(ChowTest(model1 , 30)$p_value , 0.05)
})
y <- c(5*rnorm(30 , 100 , 5 ) + 60 , 2*rnorm(20 , 100 , 5)+20)
x <- 5*rnorm(50 , 100 , 5 ) + 20
model1 <- lm(y ~ x)
test_that("multiplication works", {
expect_lt(ChowTest(model1 , 30)$p_value , 0.05)
})
source('C:/Users/ugurc/copse/tests/testthat/test-chowTest.R', echo=TRUE)
rm(list = ls())
source('C:/Users/ugurc/copse/R/runsTest.R', encoding = 'UTF-8', echo=TRUE)
usethis::use_testthat(3)
library(testthat)
library(usethis)
ch_vec <- sample(x = c("John" , "Jane" ) , size = 30 , replace = TRUE , prob = c(40 , 60))
fac_vec <- as.factor(sample(x = c("John" , "Jane" ) , size = 30 , replace = TRUE , prob = c(40 , 60)))
num_vec <- round(rnorm(n = 30 , mean = 100 , sd = 10 ))
RunsTest(ch_vec)
RunsTest(fac_vec)
RunsTest(num_vec)
source('C:/Users/ugurc/copse/R/runsTestTools.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ch_vec <- sample(x = c("John" , "Jane" ) , size = 30 , replace = TRUE , prob = c(40 , 60))
fac_vec <- as.factor(sample(x = c("John" , "Jane" ) , size = 30 , replace = TRUE , prob = c(40 , 60)))
num_vec <- round(rnorm(n = 30 , mean = 100 , sd = 10 ))
test_that("Chow Test", {
expect_equal(RunsTest(ch_vec)$runs , 11)
expect_equal(RunsTest(fac_vec)$runs , 16)
expect_equal(RunsTest(num_vec)$runs , 18)
})
usethis::use_testthat(3)
library(testthat)
library(usethis)
ch_vec <- sample(x = c("John" , "Jane" ) , size = 30 , replace = TRUE , prob = c(40 , 60))
fac_vec <- as.factor(sample(x = c("John" , "Jane" ) , size = 30 , replace = TRUE , prob = c(40 , 60)))
num_vec <- round(rnorm(n = 30 , mean = 100 , sd = 10 ))
RunsTest(ch_vec)
RunsTest(fac_vec)
RunsTest(num_vec)
usethis::use_testthat(3)
library(testthat)
library(usethis)
set.seed(100)
ch_vec <- sample(x = c("John" , "Jane" ) , size = 30 , replace = TRUE , prob = c(40 , 60))
fac_vec <- as.factor(sample(x = c("John" , "Jane" ) , size = 30 , replace = TRUE , prob = c(40 , 60)))
num_vec <- round(rnorm(n = 30 , mean = 100 , sd = 10 ))
RunsTest(ch_vec)
RunsTest(fac_vec)
RunsTest(num_vec)
set.seed(100)
ch_vec <- sample(x = c("John" , "Jane" ) , size = 30 , replace = TRUE , prob = c(40 , 60))
fac_vec <- as.factor(sample(x = c("John" , "Jane" ) , size = 30 , replace = TRUE , prob = c(40 , 60)))
num_vec <- round(rnorm(n = 30 , mean = 100 , sd = 10 ))
test_that("Chow Test", {
expect_equal(RunsTest(ch_vec)$runs , 15)
expect_equal(RunsTest(fac_vec)$runs , 11)
expect_equal(RunsTest(num_vec)$runs , 19)
})
source('C:/Users/ugurc/copse/tests/testthat/test-runsTest.R', echo=TRUE)
source('C:/Users/ugurc/copse/tests/testthat/test-chowTest.R', echo=TRUE)
source('C:/Users/ugurc/copse/R/chowTest.R', echo=TRUE)
source('C:/Users/ugurc/copse/tests/testthat/test-chowTest.R', echo=TRUE)
source('C:/Users/ugurc/copse/tests/testthat/test-runsTest.R', echo=TRUE)
source('C:/Users/ugurc/copse/R/resetTest.R', encoding = 'UTF-8', echo=TRUE)
usethis::use_testthat(3)
library(testthat)
library(usethis)
set.seed(100)
y <- rnorm(50 , 100 , 15)
x <- runif(50 , 50 , 150 )
model1 <- lm(y ~ x)
ResetTest(model1 , 2 , "rss")
ResetTest(model1 , 2:3 , "rss")
ResetTest(model1 , 3:4 , "r.squared")
set.seed(100)
y <- rnorm(50 , 100 , 15)
x <- runif(50 , 50 , 150 )
model1 <- lm(y ~ x)
test_that("Reset Test", {
expect_lt(ResetTest(model1 , 2 , "rss") , 0.10)
expect_lt(ResetTest(model1 , 2:3 , "rss") , 0.10)
expect_lt(ResetTest(model1 , 3:4 , "r.squared") , 0.10)
})
set.seed(100)
y <- rnorm(50 , 100 , 15)
x <- runif(50 , 50 , 150 )
model1 <- lm(y ~ x)
test_that("Reset Test", {
expect_lt(ResetTest(model1 , 2 , "rss")$p_value , 0.10)
expect_lt(ResetTest(model1 , 2:3 , "rss")$p_value , 0.10)
expect_lt(ResetTest(model1 , 3:4 , "r.squared")$p_value , 0.10)
})
usethis::use_testthat(3)
library(testthat)
library(usethis)
set.seed(100)
y <- rnorm(50 , 100 , 15)
x <- runif(50 , 50 , 150 )
model1 <- lm(y ~ x)
ResetTest(model1 , 2 , "rss")$p_value
set.seed(100)
y <- rnorm(50 , 100 , 15)
x <- runif(50 , 50 , 150 )
model1 <- lm(y ~ x)
test_that("Reset Test", {
expect_gt(ResetTest(model1 , 2 , "rss")$p_value , 0.10)
expect_gt(ResetTest(model1 , 2:3 , "rss")$p_value , 0.10)
expect_gt(ResetTest(model1 , 3:4 , "r.squared")$p_value , 0.10)
})
usethis::use_testthat(3)
library(testthat)
library(usethis)
set.seed(100)
y <- rnorm(50 , 100 , 15)
x <- runif(50 , 50 , 150 )
model1 <- lm(y ~ x)
ResetTest(model1 , 2 , "rss")
ResetTest(model1 , 2:3 , "rss")
ResetTest(model1 , 3:4 , "r.squared")
set.seed(100)
y <- rnorm(50 , 100 , 15)
x <- runif(50 , 50 , 150 )
model1 <- lm(y ~ x)
test_that("Reset Test", {
expect_gt(ResetTest(model1 , 2 , "rss")$p_value , 0.10)
expect_lt(ResetTest(model1 , 2:3 , "rss")$p_value , 0.10)
expect_lt(ResetTest(model1 , 3:4 , "r.squared")$p_value , 0.10)
})
source('C:/Users/ugurc/copse/tests/testthat/test-resetTest.R', echo=TRUE)
